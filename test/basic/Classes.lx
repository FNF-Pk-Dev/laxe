class Classes extends Test.LaxeTest:
	const myConst = "ConstVal"

	var myMut = 5

	# Laxe automatically initializes some types
	var nonInitInt: int
	var nonInitFloat: float
	var nonInitStr: str
	var nonInitBool: bool

	override def test:
		assert(myConst == "ConstVal")
		assert(self.myConst == "ConstVal")

		assert(myMut == 5)
		myMut *= 5
		assert(myMut == 25)

		assert(nonInitInt == 0)
		assert(nonInitFloat == 0.0)
		assert(nonInitStr == "")
		assert(nonInitBool == false)

		const cls = new TestClass()
		cls.add()
		cls.add(10)
		assert(cls.getField() == 111)

class TestClass:
	var field: int

	def new:
		field = 100

	def getField -> int:
		return field

	def add(v = 1):
		field += v