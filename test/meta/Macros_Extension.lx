class Macros_Extension extends Test.LaxeTest:
	override def test:
		assert(4.add!(4) == 8)
		assert("Hello".add!(" world!") == "Hello world!")

		assert("%1 - %2".format!(12, 24) == "12 - 24")

		const testDotAccess = { some: { thing: 12 } }
		assert(testDotAccess.some.thing.add!(100) == 112)

macro add(self: expr`, other: expr`) -> expr`:
	return template expr:
		$self + $other

macro format(self: expr`, ...args: int) -> expr`:
	return if self.isConstString():
		var i = 0
		var string: str = self.getConstString()
		for a in args:
			string = string.replace("%" + (i + 1), "" + a)
			i++
		template expr: $v{string}
	else:
		self
